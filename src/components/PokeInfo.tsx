import Head from "next/head";
import Image from "next/image";

import styles from "../styles/PokeInfo.module.scss";

import { capitalizedString } from "@/helpers/capitalizedString";

import heightImg from "../../public/static/height.svg";
import weightImg from "../../public/static/weight.svg";

import {
  Pokemon,
  PokemonAbility,
  PokemonInfo,
  PokemonSpecies,
  PokemonStats,
  PokemonType,
} from "@/interfaces/interfaces";
import Link from "next/link";

const PokeInfo = ({ pokemon }: PokemonInfo) => {
  const maxStat = 255;

  const baseStatsNames: { [key: string]: string } = {
    "hp": "hp",
    "attack": "atk",
    "defense": "def",
    "special-attack": "sp.atk",
    "special-defense": "sp.def",
    "speed": "spd",
  };

  if (pokemon?.length === 0) {
    return <p className={styles.error}>Pokemon ID doesn't exist</p>;
  }

  return (
    <>
      <Head>
        <title>{`${capitalizedString(pokemon?.[0].name!)} #${
          pokemon?.[0].id
        } - Pokedex Next App`}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/pokeball.svg" />
      </Head>

      {pokemon?.map((poke: Pokemon) => {
        const { name, id, height, weight } = poke;

        const types = poke.pokemon_v2_pokemontypes.map((type: PokemonType) => {
          return type.pokemon_v2_type.name;
        });

        const abilities = poke.pokemon_v2_pokemonabilities.map(
          (abilitie: PokemonAbility) => {
            return abilitie.pokemon_v2_ability.name;
          }
        );

        const stats = poke.pokemon_v2_pokemonstats.map((stat: PokemonStats) => {
          return {
            base_stat: stat.base_stat,
            name: stat.pokemon_v2_stat.name,
          };
        });

        const evolution =
          poke.pokemon_v2_pokemonspecy.pokemon_v2_evolutionchain.pokemon_v2_pokemonspecies.map(
            (evo: PokemonSpecies) => {
              const { name, id } = evo;

              const flavorText =
                evo.pokemon_v2_pokemonspeciesflavortexts[0]?.flavor_text || "";

              return {
                name,
                idEvo: id,
                flavorText,
              };
            }
          );

        return (
          <div className={styles.container} key={poke.id}>
            <header className={styles.header}>
              <div className={styles.infoHeader}>
                <Link href="/">‚Üê</Link>
                <h2 className={styles.name}>{capitalizedString(name)}</h2>
              </div>

              <p className={styles.id}>{`#${
                id <= 9 ? "00" : id >= 10 && id <= 99 ? "0" : ""
              }${id}`}</p>
            </header>

            <Image
              priority
              style={{ backgroundColor: `var(--type-${types[0]})` }}
              className={styles.img}
              alt="Pokemon Sprite"
              src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${poke.id}.png`}
              width={250}
              height={250}
            ></Image>

            <div className={styles.types}>
              {types.map((type, i) => (
                <p key={i} style={{ backgroundColor: `var(--type-${type})` }}>
                  {type}
                </p>
              ))}
            </div>

            <div className={styles.pokeStats}>
              <div>
                <Image
                  src={heightImg}
                  width={30}
                  height={30}
                  alt="Height Pokemon"
                ></Image>

                <p>{height / 10} m</p>
              </div>

              <div>
                <Image
                  src={weightImg}
                  width={25}
                  height={30}
                  alt="Weight Pokemon"
                ></Image>
                <p>{weight / 10} kg</p>
              </div>

              <div className={styles.movesDiv}>
                <p className={styles.movesTitle}>Moves</p>
                {abilities.map((abilitie, i) => (
                  <p key={i}>{capitalizedString(abilitie)}</p>
                ))}
              </div>
            </div>

            <div className={styles.baseStats}>
              <h3 className={styles.headerStats}>Base Stats</h3>
              {stats.map((stat, i) => {
                return (
                  <div key={i} className={styles.item}>
                    <span>{baseStatsNames[stat.name]}</span>
                    <div className={styles.rigth}>
                      <p>{stat.base_stat}</p>
                      <div className={styles.line}>
                        <div
                          className={styles.background}
                          style={{
                            backgroundColor: `var(--type-${types[0]})`,
                          }}
                        />
                        <div
                          className={styles.secondLine}
                          style={{
                            backgroundColor: `var(--type-${types[0]})`,
                            opacity: "1",
                            width: `${(stat.base_stat / maxStat) * 100}%`,
                          }}
                        />
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        );
      })}
    </>
  );
};

export default PokeInfo;
